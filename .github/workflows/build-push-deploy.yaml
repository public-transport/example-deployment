name: Build, push and deploy
on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master
      uses: actions/checkout@master

    - name: Build container image
      # we take the github repository name ($GITHUB_REPOSITORY also contains the user, so we slice it at the '/') and append the head of the commit hash
      run: docker build -t publictransport/$(echo $GITHUB_REPOSITORY | cut -d'/' -f2 -):$(echo $GITHUB_SHA | head -c7) .

    - name: Docker Login
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      run: echo $DOCKER_ACCESS_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Push image to Docker Hub
      run: docker push publictransport/$(echo $GITHUB_REPOSITORY | cut -d'/' -f2 -)

    - name: Update kubernetes file
      run: TAG=$(echo $GITHUB_SHA | head -c7) && REPO=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2 -) && sed -i "s|<IMAGE>|publictransport/$REPO:$TAG|" $GITHUB_WORKSPACE/kubernetes.yaml

    - name: Save DigitalOcean kubeconfig
      uses: digitalocean/action-doctl@master
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      with:
        args: kubernetes cluster kubeconfig show antarktika-cluster > $GITHUB_WORKSPACE/.kubeconfig

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/kubernetes.yaml

    - name: Verify deployment
      env:
        DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}
      run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig rollout status "deployment/$DEPLOYMENT_NAME" --namespace user-land
